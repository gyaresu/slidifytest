demo()
demo(Hershey)
example(package=)
example()
example(01)
example(package="shiny")
demo(graphics)
library(ggplot2)
example("ggplot2")
ggplot?
?ggplot2
library("datasets")
datasets
?dataset
?datasets
nhtemp
Puromycin
ggplot2::geom_boxplot(Orange)
ggplot2::geom_boxplot("Orange")
quakes
demo()
demo(error.catching)
fix(tryCatch.W.E)
fix(tryCatch.W.E)
demo()
demo(recursion)
demo(volcano)
demo('volcano'')
demo(persp)
/q
quit
:
)
''
demo(persp)
install.packages("knitr")
install.packages(c("foreign", "lattice", "Matrix", "mgcv"))
install.packages(c("foreign", "lattice", "Matrix", "mgcv", "nlme", "rpart", "survival"))
require(gdata)
install.packages("gdata")
install.packages(c("gdata", "lint"))
install.packages("gtools")
error.catching
demo(error.catching)
demo(error.catching)
demo(is.things)
demo(scoping)
demo(graphics)
c = cumsum(rnorm(10)))
c = cumsum(rnorm(10))
require(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
df <- data.frame(time = 1:10,
)
b = cumsum(rnorm(10)),
demo(ggplot2.diamonds)
demo(ggplot2)
require(ggplot2)
ggplot2::diamonds
install.packages("rexcel")
demo(ggplot2)
demo(ggplot2 = .packages(all.available = TRUE))
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
library()
library(rstudio)
library(utils)
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
head(iris)
head(iris3)
head(iris)
head(iris)
head(iris, 10)
head(10, iris)
head(iris, 100)
head(iris, 15)
head(iris, 20)
qplot(Sepal.Length, Petal.Width, data = iris, color = Species)
qplot(Sepal.Length, Petal.Width, data = iris, color = Sepal)
qplot(Sepal.Length, Petal.Width, data = iris, color = Species)
qplot(2,3,3)
qplot(Bob,Alice,3)
qplot(100,100,50)
qplot(100,100,[50,20])
blah = (2,3,4,2,4,3,3,3,4)
var blah = (2,3,4,2,4,3,3,3,4)
set.seed(5689)
movies <- movies[sample(nrow(movies), 1000), ]
# Simple examples
qplot(rating, data=movies, geom="histogram")
qplot(rating, data=movies, geom="histogram", binwidth = 10)
qplot(rating, data=movies, geom="histogram", binwidth = range/10)
qplot(rating, data=movies, geom="histogram", binwidth = 40)
qplot(rating, data=movies, geom="histogram", binwidth = x)
qplot(rating, data=movies, geom="histogram", binwidth = range/30)
qplot(rating, data=movies, geom="histogram", binwidth = (range/30))
qplot(rating, data=movies, geom="histogram"
)
qplot(rating, data=movies, geom="histogram", binwidth = 100)
qplot(rating, data=movies, geom="histogram", binwidth = 100/30)
qplot(rating, data=movies, geom="histogram", binwidth = 100/300)
qplot(rating, data=movies, geom="histogram", binwidth = 100/3000)
qplot(rating, data=movies, geom="histogram", binwidth = .01)
qplot(rating, data=movies, geom="histogram", binwidth = .1)
qplot(rating, data=movies, geom="histogram", binwidth = .04)
qplot(rating, data=movies, geom="histogram", binwidth = .07)
qplot(rating, data=movies, geom="histogram", binwidth = .05)
m + geom_histogram(aes(fill = ..count..))
m <- ggplot(movies, aes(x=rating))
m + geom_histogram()
m + geom_histogram(aes(fill = ..count..))
install.packages("markdown")
library(devtools)
install.packages(devtools)
install.packages("devtools"")
)
exit
;
""
install.packages("devtools")
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
library(slidifyLibraries)
author("Slidify Deck")
library(knitr)
slidify("index.Rmd")
publish(user = 'gyaresu', repo = "slidifytest", host = 'github')
publish(user = 'gyaresu', repo = "slidifytest", host = 'github')
publish(user = 'gyaresu', repo = "slidifytest", host = 'github')
publish(user = 'gyaresu', repo = "slidifytest", host = 'github')
publish(user = 'gyaresu', repo = "slidifytest", host = 'github')
publish_github(repo='slidifytest', username='gyaresu')
slidify('index.Rmd')
publish_github(repo='slidifytest', username='gyaresu')
slidify('index.Rmd')
cat('index.Rmd')
pwd
cd
slidify('index.Rmd')
publish_github(repo='slidifytest', username='gyaresu')
